name: Windows build

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 30

    # use msys2 as default shell
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            base-devel
            git
            zip
            msys2-devel
            zlib-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-i686-toolchain
            mingw-w64-x86_64-openssl
            mingw-w64-i686-openssl
            openssl-devel

      - name: Build git-crypt
        run: make LDFLAGS="-static-libstdc++ -static -lcrypto -lws2_32"

      - name: Create Release
        if: contains(github.ref, 'release')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Windows ${{ github.ref }}
          draft: true
          prerelease: false

      - name: zip artifacts
        run: |
          zip --junk-paths -r git-crypt-windows.zip git-crypt.exe

      - name: Upload build artifacts
          uses: actions/upload-artifact@v2
          with:
            name: build-artifacts
            path: git-crypt-windows.zip

      - name: Upload Release Asset
        if: contains(github.ref, 'release')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./git-crypt-windows.zip
          asset_name: git-crypt-windows.zip
          asset_content_type: application/zip

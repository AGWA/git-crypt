DEPENDENCIES

To build git-crypt, you need:

                                    Debian/Ubuntu package   RHEL/CentOS package
  -----------------------------------------------------------------------------
  Make                              make                    make
  A C++11 compiler (e.g. gcc 4.9+)  g++                     gcc-c++
  OpenSSL development files         libssl-dev              openssl-devel


To use git-crypt, you need:

                                    Debian/Ubuntu package   RHEL/CentOS package
  -----------------------------------------------------------------------------
  Git 1.7.2 or newer                git                     git
  OpenSSL                           openssl                 openssl

Note: Git 1.8.5 or newer is recommended for best performance.


BUILDING GIT-CRYPT

Run:

	$ make
	$ make install

To install to a specific location:

	$ make install PREFIX=/usr/local

Or, just copy the git-crypt binary to wherever is most convenient for you.


BUILDING THE MAN PAGE

To build and install the git-crypt(1) man page, pass ENABLE_MAN=yes to make:

	$ make ENABLE_MAN=yes
	$ make ENABLE_MAN=yes install

xsltproc is required to build the man page.  Note that xsltproc will access
the Internet to retrieve its stylesheet unless the Docbook stylesheet is
installed locally and registered in the system's XML catalog.


BUILDING A DEBIAN PACKAGE

Debian packaging can be found in the 'debian' branch of the project
Git repository.  The package is built using git-buildpackage as follows:

	$ git checkout debian
	$ git-buildpackage -uc -us


INSTALLING ON MAC OS X

Using the brew package manager, simply run:

        $ brew install git-crypt


EXPERIMENTAL WINDOWS SUPPORT

git-crypt should  build on Windows with  MinGW.  Additionally, Windows
support is  less tested and does  not currently create key  files with
restrictive permissions, making it unsuitable  for use on a multi-user
system.  Windows support will mature in a future version of git-crypt.
Bug reports and patches are most welcome!

1.  Install  a MinGW/MSys2 development environment,  for example using
    https://github.com/orlp/dev-on-windows/wiki/Installing-GCC--&-MSYS2:
	1.  Remove or rename `%USERPROFILE%\.bashrc` if you have one prior
        to installation.
	2.  Install  [MSys2](https://www.msys2.org/) & make sure  there is
        no more update pending using `pacman -Syuu`.
	3.  From  a MSYS2 MinGW  64-bit terminal, install  the development
        environment:
	
	$ pacman -S --needed base-devel mingw-w64-i686-toolchain mingw-w64-x86_64-toolchain \
		git subversion mercurial \
		mingw-w64-i686-cmake mingw-w64-x86_64-cmake

2.  In a MSYS2 MinGW 64-bit terminal, run `make`
3.  Manually  install the generated `git-crypt.exe`  somewhere in your
    `%PATH%` or simply  run `make install` if you plan  to use it only
    from MSys2

